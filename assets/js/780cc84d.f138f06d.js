"use strict";(self.webpackChunkmy_learnings=self.webpackChunkmy_learnings||[]).push([[548],{9380:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var s=t(4848),a=t(8453);const r={sidebar_position:9,title:"Numbers and Dates",Description:"Information on Numbers and Dates JavaScript"},i=void 0,o={id:"JavaScript/NumbersAndDates",title:"Numbers and Dates",description:"Numbers",source:"@site/docs/JavaScript/NumbersAndDates.md",sourceDirName:"JavaScript",slug:"/JavaScript/NumbersAndDates",permalink:"/learndocs/JavaScript/NumbersAndDates",draft:!1,unlisted:!1,editUrl:"https://github.com/stevenovak123/learndocs/tree/master/docs/JavaScript/NumbersAndDates.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9,title:"Numbers and Dates",Description:"Information on Numbers and Dates JavaScript"},sidebar:"tutorialSidebar",previous:{title:"Maps and Sets",permalink:"/learndocs/JavaScript/MapAndSet"},next:{title:"Introduction to React",permalink:"/learndocs/React/intro"}},l={},c=[{value:"Numbers",id:"numbers",level:2},{value:"Conversion",id:"conversion",level:3},{value:"Parsing",id:"parsing",level:3},{value:"Math Object",id:"math-object",level:2},{value:"Math Constants",id:"math-constants",level:2},{value:"Mathematical Methods",id:"mathematical-methods",level:2},{value:"Math.sqrt()",id:"mathsqrt",level:3},{value:"Math.min() &amp; Math.max()",id:"mathmin--mathmax",level:3},{value:"Math.round()",id:"mathround",level:3},{value:"Math.ceil()",id:"mathceil",level:3},{value:"Math.floor()",id:"mathfloor",level:3},{value:"Math.trunc()",id:"mathtrunc",level:3},{value:"Math.pow()",id:"mathpow",level:3},{value:"Math.random()",id:"mathrandom",level:3}];function h(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"numbers",children:"Numbers"}),"\n",(0,s.jsx)(n.p,{children:"All numbers are reperesented as floating point numbers. They are stored in binary format (Base 2), therefore it is difficult to store simple fractions/decimals number."}),"\n",(0,s.jsx)(n.h3,{id:"conversion",children:"Conversion"}),"\n",(0,s.jsx)(n.p,{children:"We can convert strings to numbers."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"console.log(Number('23'));\r\nconsole.log(+'23');\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"+'23'"})," works because JavaScript looks at the plus and the type coerces the string into numbers."]}),"\n",(0,s.jsx)(n.h3,{id:"parsing",children:"Parsing"}),"\n",(0,s.jsx)(n.p,{children:"We can parse numbers as well using the parseInt method. It will try to ignore everything that is not a number. Only condition is that the number has to be starting the string. Optionally will take second argument that is the radix of the number."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"console.log(Number.parseInt('40px')); // 40\n"})}),"\n",(0,s.jsx)(n.h2,{id:"math-object",children:"Math Object"}),"\n",(0,s.jsxs)(n.p,{children:["Math object allows you to perform mathematical tasks on numbers.\r\nSyntax for any Math property is ",(0,s.jsx)(n.code,{children:"Math.property"})]}),"\n",(0,s.jsx)(n.h2,{id:"math-constants",children:"Math Constants"}),"\n",(0,s.jsx)(n.p,{children:"It gives 8 Mathematical constants that can be accessed as its properties"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Math.E"})," - Returns Euler's number"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Math.PI"})," - Returns PI"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Math.SQRT2"})," - Returns the square root of 2"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Math.SQRT1_2"})," - Returns the square root of 1/2"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Math.LN2"})," - Returns the natural logarithm of 2"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Math.LN10"})," - Returns the natural logarithm of 10"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Math.LOG2E"})," - Returns base 2 logarithm of E"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Math.LOG10E"})," - Returns base 10 logarithm of E"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"mathematical-methods",children:"Mathematical Methods"}),"\n",(0,s.jsx)(n.h3,{id:"mathsqrt",children:"Math.sqrt()"}),"\n",(0,s.jsx)(n.p,{children:"Gives square root of a number."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"console.log(Math.sqrt(25)); //Output -> 5\r\nconsole.log(8 ** (1 / 3)); // Output -> 2 (only way to get cubic root)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"mathmin--mathmax",children:"Math.min() & Math.max()"}),"\n",(0,s.jsx)(n.p,{children:"Gives minimum or maximum in a range of numbers passed as arguments in the function."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"console.log(Math.min(5, 6, 7, 2, 10)); //Output -> 2\r\nconsole.log(Math.max(5, 6, 7, 3, 10)); // Output -> 520\n"})}),"\n",(0,s.jsx)(n.h3,{id:"mathround",children:"Math.round()"}),"\n",(0,s.jsx)(n.p,{children:"Returns the nearest integer"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"console.log(Math.round(4.6)); // Output --\x3e 5\n"})}),"\n",(0,s.jsx)(n.h3,{id:"mathceil",children:"Math.ceil()"}),"\n",(0,s.jsx)(n.p,{children:"Returns the value rounded up to its nearest integer"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"console.log(Math.ceil(4.6)); // Output --\x3e 5\n"})}),"\n",(0,s.jsx)(n.h3,{id:"mathfloor",children:"Math.floor()"}),"\n",(0,s.jsx)(n.p,{children:"Returns the value rounded down to its nearest integer"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"console.log(Math.floor(4.6)); // Output --\x3e 4\n"})}),"\n",(0,s.jsx)(n.h3,{id:"mathtrunc",children:"Math.trunc()"}),"\n",(0,s.jsx)(n.p,{children:"Returns the integer part of the number"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"console.log(Math.trunc(4.6)); // Output --\x3e 4\n"})}),"\n",(0,s.jsx)(n.h3,{id:"mathpow",children:"Math.pow()"}),"\n",(0,s.jsx)(n.p,{children:"Returns the value of first argument to the power of the second."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"console.log(Math.pow(8, 2)); // Output --\x3e 64\n"})}),"\n",(0,s.jsx)(n.h3,{id:"mathrandom",children:"Math.random()"}),"\n",(0,s.jsx)(n.p,{children:"Returns a random number between 0 (inclusive), and 1 (exclusive)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"console.log(Math.random()); // Output --\x3e 0.6498898044650971\n"})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var s=t(6540);const a={},r=s.createContext(a);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);