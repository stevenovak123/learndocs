"use strict";(self.webpackChunkmy_learnings=self.webpackChunkmy_learnings||[]).push([[548],{7774:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"JavaScript/NumbersAndDates","title":"Numbers and Dates","description":"Numbers","source":"@site/docs/JavaScript/NumbersAndDates.md","sourceDirName":"JavaScript","slug":"/JavaScript/NumbersAndDates","permalink":"/learndocs/JavaScript/NumbersAndDates","draft":false,"unlisted":false,"editUrl":"https://github.com/stevenovak123/learndocs/tree/master/docs/JavaScript/NumbersAndDates.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar_position":9,"title":"Numbers and Dates","Description":"Information on Numbers and Dates JavaScript"},"sidebar":"tutorialSidebar","previous":{"title":"Maps and Sets","permalink":"/learndocs/JavaScript/MapAndSet"},"next":{"title":"Asynchronous JavaScript","permalink":"/learndocs/JavaScript/AsyncJS"}}');var a=t(4848),r=t(8453);const l={sidebar_position:9,title:"Numbers and Dates",Description:"Information on Numbers and Dates JavaScript"},o=void 0,i={},c=[{value:"Numbers",id:"numbers",level:2},{value:"Conversion",id:"conversion",level:3},{value:"Parsing",id:"parsing",level:3},{value:"Big Int",id:"big-int",level:2},{value:"Math Object",id:"math-object",level:2},{value:"Math Constants",id:"math-constants",level:2},{value:"Mathematical Methods",id:"mathematical-methods",level:2},{value:"Math.sqrt()",id:"mathsqrt",level:3},{value:"Math.min() &amp; Math.max()",id:"mathmin--mathmax",level:3},{value:"Math.round()",id:"mathround",level:3},{value:"Math.ceil()",id:"mathceil",level:3},{value:"Math.floor()",id:"mathfloor",level:3},{value:"Math.trunc()",id:"mathtrunc",level:3},{value:"Math.pow()",id:"mathpow",level:3},{value:"Math.random()",id:"mathrandom",level:3},{value:"Dates",id:"dates",level:2},{value:"Date Methods",id:"date-methods",level:2},{value:"getFullYear();",id:"getfullyear",level:3},{value:"getMonth()",id:"getmonth",level:3},{value:"getDate()",id:"getdate",level:3},{value:"getDay()",id:"getday",level:3}];function d(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"numbers",children:"Numbers"}),"\n",(0,a.jsx)(n.p,{children:"All numbers are reperesented as floating point numbers. They are stored in binary format (Base 2), therefore it is difficult to store simple fractions/decimals number."}),"\n",(0,a.jsx)(n.h3,{id:"conversion",children:"Conversion"}),"\n",(0,a.jsx)(n.p,{children:"We can convert strings to numbers."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"console.log(Number('23'));\r\nconsole.log(+'23');\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"+'23'"})," works because JavaScript looks at the plus and the type coerces the string into numbers."]}),"\n",(0,a.jsx)(n.h3,{id:"parsing",children:"Parsing"}),"\n",(0,a.jsx)(n.p,{children:"We can parse numbers as well using the parseInt method. It will try to ignore everything that is not a number. Only condition is that the number has to be starting the string. Optionally will take second argument that is the radix of the number."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"console.log(Number.parseInt('40px')); // 40\n"})}),"\n",(0,a.jsx)(n.h2,{id:"big-int",children:"Big Int"}),"\n",(0,a.jsx)(n.p,{children:"Big Int is a way of storing numbers greater than its MAX_SAFE_INTEGER.\r\nAll the usual operators work the same. Math functions will not work correct.\r\nIt is not possible to mix big ints with other types. Ideally the other numbers should be converted to Big Int.\r\nComparison and Equality will work without conversions."}),"\n",(0,a.jsx)(n.h2,{id:"math-object",children:"Math Object"}),"\n",(0,a.jsxs)(n.p,{children:["Math object allows you to perform mathematical tasks on numbers.\r\nSyntax for any Math property is ",(0,a.jsx)(n.code,{children:"Math.property"})]}),"\n",(0,a.jsx)(n.h2,{id:"math-constants",children:"Math Constants"}),"\n",(0,a.jsx)(n.p,{children:"It gives 8 Mathematical constants that can be accessed as its properties"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Math.E"})," - Returns Euler's number"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Math.PI"})," - Returns PI"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Math.SQRT2"})," - Returns the square root of 2"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Math.SQRT1_2"})," - Returns the square root of 1/2"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Math.LN2"})," - Returns the natural logarithm of 2"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Math.LN10"})," - Returns the natural logarithm of 10"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Math.LOG2E"})," - Returns base 2 logarithm of E"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Math.LOG10E"})," - Returns base 10 logarithm of E"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"mathematical-methods",children:"Mathematical Methods"}),"\n",(0,a.jsx)(n.h3,{id:"mathsqrt",children:"Math.sqrt()"}),"\n",(0,a.jsx)(n.p,{children:"Gives square root of a number."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"console.log(Math.sqrt(25)); //Output -> 5\r\nconsole.log(8 ** (1 / 3)); // Output -> 2 (only way to get cubic root)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"mathmin--mathmax",children:"Math.min() & Math.max()"}),"\n",(0,a.jsx)(n.p,{children:"Gives minimum or maximum in a range of numbers passed as arguments in the function."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"console.log(Math.min(5, 6, 7, 2, 10)); //Output -> 2\r\nconsole.log(Math.max(5, 6, 7, 3, 10)); // Output -> 520\n"})}),"\n",(0,a.jsx)(n.h3,{id:"mathround",children:"Math.round()"}),"\n",(0,a.jsx)(n.p,{children:"Returns the nearest integer"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"console.log(Math.round(4.6)); // Output --\x3e 5\n"})}),"\n",(0,a.jsx)(n.h3,{id:"mathceil",children:"Math.ceil()"}),"\n",(0,a.jsx)(n.p,{children:"Returns the value rounded up to its nearest integer"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"console.log(Math.ceil(4.6)); // Output --\x3e 5\n"})}),"\n",(0,a.jsx)(n.h3,{id:"mathfloor",children:"Math.floor()"}),"\n",(0,a.jsx)(n.p,{children:"Returns the value rounded down to its nearest integer"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"console.log(Math.floor(4.6)); // Output --\x3e 4\n"})}),"\n",(0,a.jsx)(n.h3,{id:"mathtrunc",children:"Math.trunc()"}),"\n",(0,a.jsx)(n.p,{children:"Returns the integer part of the number"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"console.log(Math.trunc(4.6)); // Output --\x3e 4\n"})}),"\n",(0,a.jsx)(n.h3,{id:"mathpow",children:"Math.pow()"}),"\n",(0,a.jsx)(n.p,{children:"Returns the value of first argument to the power of the second."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"console.log(Math.pow(8, 2)); // Output --\x3e 64\n"})}),"\n",(0,a.jsx)(n.h3,{id:"mathrandom",children:"Math.random()"}),"\n",(0,a.jsx)(n.p,{children:"Returns a random number between 0 (inclusive), and 1 (exclusive)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"console.log(Math.random()); // Output --\x3e 0.6498898044650971\n"})}),"\n",(0,a.jsx)(n.h2,{id:"dates",children:"Dates"}),"\n",(0,a.jsx)(n.p,{children:"There are multiple ways to create dates. All require a constructor. Months are 0 based like arrays. hence 1 is Feb and so on.\r\nDates can also auto correct themselves if entered incorrectly."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"const now=new Date();\r\nconsole.log(now) //Outputs date \r\nconsole.log(new Date('April 18 2020 12:02:31'))\r\nconsole.log(new Date('April 11, 2024'))\r\nconsole.log(new Date(2025,1,08,08,02,22)) // Output --\x3e Sat 2025 Feb 08, 08:02:22\n"})}),"\n",(0,a.jsx)(n.h2,{id:"date-methods",children:"Date Methods"}),"\n",(0,a.jsx)(n.h3,{id:"getfullyear",children:"getFullYear();"}),"\n",(0,a.jsx)(n.p,{children:"Returns year of the date."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const future = new Date(2027,10,19,15,23)\r\nconsole.log(future.getFullYear()) //Output --\x3e 2027\n"})}),"\n",(0,a.jsx)(n.h3,{id:"getmonth",children:"getMonth()"}),"\n",(0,a.jsx)(n.p,{children:"Returns month of the date. 0 based."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const future = new Date(2027,10,19,15,23)\r\nconsole.log(future.getMonth()) //Output --\x3e 10\n"})}),"\n",(0,a.jsx)(n.h3,{id:"getdate",children:"getDate()"}),"\n",(0,a.jsx)(n.p,{children:"Returns day of the date. Day of the month is returned"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const future = new Date(2027,10,19,15,23)\r\nconsole.log(future.getDate()) //Output --\x3e 19\n"})}),"\n",(0,a.jsx)(n.h3,{id:"getday",children:"getDay()"}),"\n",(0,a.jsx)(n.p,{children:"Returns day of the week."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const future = new Date(2027,10,19,15,23)\r\nconsole.log(future.getDay()) //Output --\x3e 5\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Similarly there are ",(0,a.jsx)(n.code,{children:"getHours()"}),", ",(0,a.jsx)(n.code,{children:"getMinutes()"}),", ",(0,a.jsx)(n.code,{children:"getSeconds()"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Every ",(0,a.jsx)(n.code,{children:"get"})," method also has a ",(0,a.jsx)(n.code,{children:"set"})," method."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var s=t(6540);const a={},r=s.createContext(a);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);