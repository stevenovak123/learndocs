"use strict";(self.webpackChunkmy_learnings=self.webpackChunkmy_learnings||[]).push([[960],{5214:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"DSA/Searching/Linear","title":"Linear Search","description":"Linear Search, logic and code","source":"@site/docs/DSA/Searching/Linear.md","sourceDirName":"DSA/Searching","slug":"/DSA/Searching/Linear","permalink":"/learndocs/DSA/Searching/Linear","draft":false,"unlisted":false,"editUrl":"https://github.com/stevenovak123/learndocs/tree/master/docs/DSA/Searching/Linear.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Linear Search","description":"Linear Search, logic and code"},"sidebar":"tutorialSidebar","previous":{"title":"Solved problems","permalink":"/learndocs/DSA/SolvedProblems"},"next":{"title":"Binary Search","permalink":"/learndocs/DSA/Searching/Binary"}}');var t=r(4848),a=r(8453);const s={sidebar_position:1,title:"Linear Search",description:"Linear Search, logic and code"},o=void 0,c={},l=[{value:"Pseudocode",id:"pseudocode",level:2},{value:"Time Complexity",id:"time-complexity",level:2}];function d(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Linear search is a simple search, where we visit each element in the array. Once the element is found, then return it. Can be done either from the start or the end."}),"\n",(0,t.jsx)(n.h2,{id:"pseudocode",children:"Pseudocode"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Accept an array and a value."}),"\n",(0,t.jsx)(n.li,{children:"Loop through the array and check if the current array element is equal to the value"}),"\n",(0,t.jsx)(n.li,{children:"If it is equal to value, return the index at which element is found."}),"\n",(0,t.jsx)(n.li,{children:"If the value is not found, return -1."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"time-complexity",children:"Time Complexity"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Best Case is O(1)"}),"\n",(0,t.jsx)(n.li,{children:"Average Case and Worst Case is O(N), where N is the size of the array"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",metastring:"title='Linear Search'",children:"function linearSearch(arr, val){\r\n    for(let i =0; i<arr.length; i++){\r\n        if(arr[i]===val){\r\n            return i;\r\n        }else{\r\n            i++;\r\n        }\r\n        return -1;\r\n    }\r\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>o});var i=r(6540);const t={},a=i.createContext(t);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);